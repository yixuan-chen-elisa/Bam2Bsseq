% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read.modbam2bed.R
\name{read.modbam2bed}
\alias{read.modbam2bed}
\title{Construct BSseq objects from nanopore BED files}
\usage{
read.modbam2bed(
  files,
  colData = NULL,
  rmZeroCov = FALSE,
  strandCollapse = TRUE
)
}
\arguments{
\item{files}{vector, BED files}

\item{pData}{data frame, phenotypic data with samples as rows and variables as columns}
}
\value{
BSseq object
}
\description{
Construct BSseq objects from nanopore BED files
}
\details{
This function reads in nanopore sequencing modified BED files
to Bsseq objects. Nanopore sequencing data (i.e. aggregated modified base
counts) is stored in modified-base BAM files. These modified-base BAM files
are converted to bedMethyl (BED) files using \href{https://github.com/epi2me-labs/modbam2bed}{modbam2bed}.

Details for using modbam2bed:
After installing modbam2bed, a conda environment is activated. Index files
for BAM files are created using \code{samtools index}. BED files with
modified-based counts are generated by specifying reference genome
(<reference.fasta>); \code{-e, -- extended} to output canonical, modified,
and filtered bases; modified base of interest, one of: 5mC, 5hmC, 5fC,
5caC, 5hmU, 5fU, 5caU, 6mA, 5oxoG, Xao. (Or modA, modC, modG, modT, modU,
modN for generic modified base).in \code{-m, -- mod_base=BASE};
chromosome or genomic region of interest in
\code{-r, --region=chr:start-end}; and threshold that filtered bases for
probability lower than threshold (default = 0.66).

Then, the BED files are read in and the Bsseq object is constructed via
\code{read.modbam2bed()} function. The function reads in BED files, extract genomic
regions, methylation, coverage, ambiguous modification status data and sample
information and then construct Bsseq object using \code{BSseq} function
within the package.
}
\examples{


files_default = c("Ctr1.bed","Ctr2.bed","Ctr3.bed",
                  "Tret1.bed","Tret2.bed","Tret3.bed")

pd = data.frame(condition =c(rep("control",3),rep("treatment",3)),
               replicate = rep(c("rep1","rep2","rep3"),2))

bsseq_nano = read.modbam2bed(files_default,colData=pd,rmZeroCov = F,
             strandCollapse=T)


}
